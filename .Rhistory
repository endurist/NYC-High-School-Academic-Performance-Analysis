sat_results <- read_csv("sat_results.csv")
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(tidyr)
library(ggplot2)
sat_results <- read_csv("sat_results.csv")
ap_2010 <- read_csv("ap_2010.csv")
class_size <- read_csv("class_size.csv")
demographics <- read_csv("demographics.csv")
graduation <- read_csv("graduation.csv")
hs_directory <- read_csv("hs_directory.csv")
sat_results <- sat_results %>%
mutate(`Num of SAT Test Takers` = as.numeric(`Num of SAT Test Takers`),
`SAT Writing Avg. Score` = as.numeric(`SAT Writing Avg. Score`),
`SAT Critical Reading Avg. Score` = as.numeric(`SAT Critical Reading Avg. Score`),
`SAT Math Avg. Score` = as.numeric(`SAT Math Avg. Score`)) %>%
mutate(avg_sat_score = `SAT Critical Reading Avg. Score` + `SAT Math Avg. Score` + `SAT Writing Avg. Score`)
ap_2010 <- ap_2010 %>%
mutate_at(3:5, as.numeric) %>%
mutate(exams_per_student = `Total Exams Taken` / `AP Test Takers`, high_score_percent = `Number of Exams with scores 3 4 or 5` / `Total Exams Taken` * 100)
class_size <- class_size %>%
filter((`GRADE` == "09-12") & (`PROGRAM TYPE` == "GEN ED"))
class_size <- class_size %>%
filter((`GRADE` == "09-12") & (`PROGRAM TYPE` == "GEN ED"))
# we also want to see an average of certain variables
class_size <- class_size %>%
group_by(CSD, `SCHOOL CODE`, `SCHOOL NAME`) %>%
summarize(avg_class_size = mean(`AVERAGE CLASS SIZE`), avg_largest_class = mean(`SIZE OF LARGEST CLASS`), avg_smallest_class = mean(`SIZE OF SMALLEST CLASS`))
class_size <- class_size %>%
filter((`GRADE` == "09-12") & (`PROGRAM TYPE` == "GEN ED"))
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(tidyr)
library(ggplot2)
sat_results <- read_csv("sat_results.csv")
ap_2010 <- read_csv("ap_2010.csv")
class_size <- read_csv("class_size.csv")
demographics <- read_csv("demographics.csv")
graduation <- read_csv("graduation.csv")
hs_directory <- read_csv("hs_directory.csv")
sat_results <- sat_results %>%
mutate(`Num of SAT Test Takers` = as.numeric(`Num of SAT Test Takers`),
`SAT Writing Avg. Score` = as.numeric(`SAT Writing Avg. Score`),
`SAT Critical Reading Avg. Score` = as.numeric(`SAT Critical Reading Avg. Score`),
`SAT Math Avg. Score` = as.numeric(`SAT Math Avg. Score`)) %>%
mutate(avg_sat_score = `SAT Critical Reading Avg. Score` + `SAT Math Avg. Score` + `SAT Writing Avg. Score`)
ap_2010 <- ap_2010 %>%
mutate_at(3:5, as.numeric) %>%
mutate(exams_per_student = `Total Exams Taken` / `AP Test Takers`, high_score_percent = `Number of Exams with scores 3 4 or 5` / `Total Exams Taken` * 100)
class_size <- class_size %>%
filter((`GRADE` == "09-12") & (`PROGRAM TYPE` == "GEN ED"))
# we also want to see an average of certain variables
class_size <- class_size %>%
group_by(CSD, `SCHOOL CODE`, `SCHOOL NAME`) %>%
summarize(avg_class_size = mean(`AVERAGE CLASS SIZE`), avg_largest_class = mean(`SIZE OF LARGEST CLASS`), avg_smallest_class = mean(`SIZE OF SMALLEST CLASS`))
# since we would like a "key" variable in each data file so that in the future we can combine them all together, we create a "DBN" variable in this case
class_size <- class_size %>%
mutate(DBN = str_c(CSD, `SCHOOL CODE`)) %>%
mutate(DBN = str_pad(DBN, width = 6, side = "left", pad = "0"))
graduation <- graduation %>%
filter(Demographic == "Total Cohort" & Cohort == "2006") %>%
select(DBN, `School Name`, `Total Grads - % of cohort`, `Dropped Out - % of cohort`)
demographics <- demographics %>%
filter(schoolyear == "20112012" & grade9 != "NA") %>%
select(DBN, Name, frl_percent, total_enrollment, ell_percent, sped_percent, asian_per, black_per, hispanic_per, white_per, male_per, female_per)
demographics_clean <- demographics %>%
select(-female_per, -Name)
demographics_clean <- demographics %>%
select(-female_per, -Name)
ny_schools <- list(sat_results, ap_2010, class_size, demographics, graduation, hs_directory)
names(ny_schools) <- c("sat_results", "ap_2010", "class_size", "demographics", "graduation", "hs_directory")
duplicate_DBN <- ny_schools %>%
map(mutate, is_dup = duplicated(DBN)) %>%
map(filter, is_dup == "TRUE")
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(tidyr)
library(ggplot2)
sat_results <- read_csv("sat_results.csv")
ap_2010 <- read_csv("ap_2010.csv")
class_size <- read_csv("class_size.csv")
demographics <- read_csv("demographics.csv")
graduation <- read_csv("graduation.csv")
hs_directory <- read_csv("hs_directory.csv")
sat_results <- sat_results %>%
mutate(`Num of SAT Test Takers` = as.numeric(`Num of SAT Test Takers`),
`SAT Writing Avg. Score` = as.numeric(`SAT Writing Avg. Score`),
`SAT Critical Reading Avg. Score` = as.numeric(`SAT Critical Reading Avg. Score`),
`SAT Math Avg. Score` = as.numeric(`SAT Math Avg. Score`)) %>%
mutate(avg_sat_score = `SAT Critical Reading Avg. Score` + `SAT Math Avg. Score` + `SAT Writing Avg. Score`)
ap_2010 <- ap_2010 %>%
mutate_at(3:5, as.numeric) %>%
mutate(exams_per_student = `Total Exams Taken` / `AP Test Takers`, high_score_percent = `Number of Exams with scores 3 4 or 5` / `Total Exams Taken` * 100)
class_size <- class_size %>%
filter((`GRADE` == "09-12") & (`PROGRAM TYPE` == "GEN ED"))
# we also want to see an average of certain variables
class_size <- class_size %>%
group_by(CSD, `SCHOOL CODE`, `SCHOOL NAME`) %>%
summarize(avg_class_size = mean(`AVERAGE CLASS SIZE`), avg_largest_class = mean(`SIZE OF LARGEST CLASS`), avg_smallest_class = mean(`SIZE OF SMALLEST CLASS`))
# since we would like a "key" variable in each data file so that in the future we can combine them all together, we create a "DBN" variable in this case
class_size <- class_size %>%
mutate(DBN = str_c(CSD, `SCHOOL CODE`)) %>%
mutate(DBN = str_pad(DBN, width = 6, side = "left", pad = "0"))
graduation <- graduation %>%
filter(Demographic == "Total Cohort" & Cohort == "2006") %>%
select(DBN, `School Name`, `Total Grads - % of cohort`, `Dropped Out - % of cohort`)
demographics <- demographics %>%
filter(schoolyear == "20112012" & grade9 != "NA") %>%
select(DBN, Name, frl_percent, total_enrollment, ell_percent, sped_percent, asian_per, black_per, hispanic_per, white_per, male_per, female_per)
demographics_clean <- demographics %>%
select(-female_per, -Name)
demographics_clean <- demographics %>%
select(-female_per, -Name)
ny_schools <- list(sat_results, ap_2010, class_size, demographics, graduation, hs_directory)
names(ny_schools) <- c("sat_results", "ap_2010", "class_size", "demographics", "graduation", "hs_directory")
duplicate_DBN <- ny_schools %>%
map(mutate, is_dup = duplicated(DBN)) %>%
map(filter, is_dup == "TRUE")
ny_schools <- list(sat_results, ap_2010, class_size, demographics, graduation, hs_directory)
names(ny_schools) <- c("sat_results", "ap_2010", "class_size", "demographics", "graduation", "hs_directory")
duplicate_DBN <- ny_schools %>%
map(mutate, is_dup = duplicated(DBN)) %>%
map(filter, is_dup == "TRUE")
demographics_clean <- demographics %>%
select(-female_per, -Name)
# there is an duplicate DBN in the ap_2010 file, remove that
ap_2010 <- ap_2010 %>%
filter(SchoolName != "YOUNG WOMEN'S LEADERSHIP SCH")
graduation <- graduation %>%
mutate_at(vars(4:5), parse_number)
View(graduation)
graduation <- graduation %>%
mutate_at(vars(3:4), parse_number)
# we would like to extract coordinates from a variable
hs_directory <- hs_directory %>%
mutate(lat_long = str_split(`Location 1`, "\n", simplify = TRUE)[, 3])
hs_directory <- hs_directory %>%
mutate(lat = str_split(lat_long, ",", simplify = TRUE)[,1], long = str_split(lat_long, ",", simplify = TRUE)[,2])
hs_directory <- hs_directory %>%
mutate(lat = str_sub(lat, 2, -1), long = str_sub(long, 1, -2)) %>%
mutate_at(vars(lat,long), as.numeric)
combined <- sat_results %>%
full_join(ap_2010, by = "DBN") %>%
left_join(class_size, by = "DBN") %>%
left_join(demographics, by = "DBN") %>%
left_join(graduation, by = "DBN") %>%
left_join(hs_directory, by = "DBN")
View(class_size)
combined <- read.csv("combined.csv")
survey <- read_tsv("masterfile11_gened_final.txt")
survey_d75 <- read_tsv("masterfile11_d75_final.txt")
View(combined)
ggplot(data = combined) +
aes(x = frl_percent, y = avg_sat_score) +
geom_point()
ggplot(data = combined) +
aes(x = ell_percent, y = avg_sat_score) +
geom_point()
ggplot(data = combined) +
aes(x = sped_percent, y = avg_sat_score) +
geom_point()
View(demographics)
View(hs_directory)
combined_race <- read_csv("combined_race.csv")
ggplot(data = combined_race) +
aes(x = frl_percent, y = avg_sat_score) +
geom_point()
ggplot(data = combined_race) +
aes(x = ell_percent, y = avg_sat_score) +
geom_point()
ggplot(data = combined_race) +
aes(x = sped_percent, y = avg_sat_score) +
geom_point()
combined_race_longer <- combined_race %>%
pivot_longer(cols = c(asian_per, black_per, hispanic_per, white_per), names_to = "race", values_to = "percent")
ggplot(data = combined_race_longer) +
aes(x = percent, y = avg_sat_score, color = race) +
geom_point()
ggplot(data = combined_race_longer) +
aes(x = percent, y = avg_sat_score, color = race) +
geom_point() +
facet_wrap(~race)
